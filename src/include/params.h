#ifndef PARAMS_H
#define PARAMS_H

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>

#include <gphoto2/gphoto2-camera.h>


/**************************************************************************************/
/****************************************************APERTURE**************************/
/**************************************************************************************/
const float aperture_tab[17] = { 
	3.5,
	4.0,
	4.5,
	5,
	5.6,
	6.3,	
	8,
	9,
	10,
	11,
	13,
	14,
	16,
	18,
	20,
	22
};

/**************************************************************************************/
/****************************************************ISO*******************************/
/**************************************************************************************/

const std::string iso_tab[8] = {
	"Auto",
	"100",
	"200",
	"400",
	"800",
	"1600",
	"3200",
	"6400"
};

const int iso_tab_convert[8] = {
	0,
	100,
	200,
	400,
	800,
	1600,
	3200,
	6400
};


/**************************************************************************************/
/****************************************************SHUTTERSPEED**********************/
/**************************************************************************************/

 const std::string shutterspeed_tab[44] = {
	"5",
	"4",
	"3.2",
	"2.5",
	"2",
	"1.6",
	"1.3",
	"1",
	"0.8",
	"0.6",
	"0.5",
	"0.4",
	"0.3",
	"1/4",
	"1/5",
	"1/6",
	"1/8",
	"1/10",
	"1/13",
	"1/15",
	"1/20",
	"1/25",
	"1/30",
	"1/40",
	"1/50",
	"1/60",
	"1/80",
	"1/100",
	"1/125",
	"1/160",
	"1/200",
	"1/250",
	"1/320",
	"1/400",
	"1/500",
	"1/640",
	"1/800",
	"1/1000",
	"1/1250",
	"1/1600",
	"1/2000",
	"1/2500",
	"1/3200",
	"1/4000"
};

 const float shutterspeed_tab_convert[44] = {
	5, 4, 3.2, 2.5, 2, 1.6, 1.3, 1.0, 0.8, 0.6, 0.5,
	0.4, 0.3, 0.25, 0.20, 0.16666, 0.125, 0.10, 0.076923077, 0.066666667, 0.05, 
	0.04, 0.033333333, 0.025, 0.02, 0.016666667, 0.0125, 0.01, 0.008, 0.00625, 0.005, 
	0.004, 0.003125, 0.0025, 0.002, 0.0015625, 0.00125, 0.001,  0.0008, 0.000625, 0.0005, 
	0.0004, 0.0003125, 0.00025
};



/**************************************************************************************/
/****************************************************WHITE BALANCE*********************/
/**************************************************************************************/

 const std::string whitebalance_tab[8] = {
	"Auto",
	"Daylight",
	"Shadow",
	"Cloudy",
	"Tungsten",
	"Fluorescent",
	"Flash",
	"Manual",
};


/**************************************************************************************/
/****************************************************WHITEBALANCE ADJUSTA**************/
/**************************************************************************************/

 const std::string whitebalanceadjusta_tab[16] = {
	"0",
	"1",
	"2",
	"3",
	"4",
	"5",
	"6",
	"7",
	"8",
	"9",
	"10",
	"11",
	"12",
	"13",
	"14",
	"15"
};

/**************************************************************************************/
/****************************************************WHITEBALANCE ADJUSTB**************/
/**************************************************************************************/

 const std::string whitebalanceadjustb_tab[16] = {
	"0",
	"1",
	"2",
	"3",
	"4",
	"5",
	"6",
	"7",
	"8",
	"9",
	"10",
	"11",
	"12",
	"13",
	"14",
	"15"
};




/**************************************************************************************/
/****************************************************METERING MODE*********************/
/**************************************************************************************/

const std::string meteringmode_tab[3] = {
	"Evaluative",
	"Partial",
	"Center-weighted average"
};


/**************************************************************************************/
/****************************************************FOCUS MODE************************/
/**************************************************************************************/

const std::string focusmode_tab[3] = {
	"One Short",
	"AI Focus",
	"AI Servo"
};


/**************************************************************************************/
/****************************************************MANUAL FOCUS MODE*****************/
/**************************************************************************************/

const std::string manualfocusdrive_tab[7] = {
	"Near 1",
	"Near 2",
	"Near 3",
	"None",
	"Far 1",
	"Far 2",
	"Far 3"
};




/**************************************************************************************/
/****************************************************IMAGE FORMAT**********************/
/**************************************************************************************/

const std::string imageformat_tab[10] = {
	"Large Fine JPEG",
	"Large Normal JPEG",
	"Medium Fine JPEG",
	"Medium Normal JPEG",
	"Small Fine JPEG",
	"Small Normal JPEG",
	"Smaller JPEG",
	"Tiny JPEG",
	"RAW + Large Fine JPEG",
	"RAW"
};


/**************************************************************************************/
/****************************************************COLOR SPACE***********************/
/**************************************************************************************/

const std::string colorspace_tab[2] = {
	"sRGB",
	"AdobeRGB"
};




/**************************************************************************************/
/****************************************************AUTO EXPOSURE MODE****************/
/**************************************************************************************/

const std::string autoexposuremode_tab[16] = {
	"P",
	"TV",
	"AV",
	"Manual",
	"Bulb",
	"A_DEP",
	"DEP",
	"Custom",
	"Lock",
	"Green",
	"Night Portrait",
	"Sports",
	"Portrait",
	"Landscape",
	"Closeup",
	"Flash Off",
};


/**************************************************************************************/
/****************************************************DRIVE MODE************************/
/**************************************************************************************/

const std::string drivemode_tab[5] = {
	"Single",
	"Continuous",
	"Timer 10 sec",
	"Timer 2 sec",
	"Unknown value 0007",
};

/**************************************************************************************/
/****************************************************PICTURE STYLE*********************/
/**************************************************************************************/

const std::string picturestyle_tab[9] = {
	"Standard",
	"Portrait",
	"Landscape",
	"Neutral",
	"Faithful",
	"Monochrome",
	"User defined 1",
	"User defined 2",
	"User defined 3"
};

/**************************************************************************************/
/****************************************************AUTO EXPOSURe BRACKETING**********/
/**************************************************************************************/

const std::string aeb[7] = {
	"off",
	"+/- 1/3",
	"+/- 2/3",
	"+/- 1",
	"+/- 1 1/3",
	"+/- 1 2/3",
	"+/- 2"
};




#endif







































































